{"version":3,"sources":["services/persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","Notification","message","console","log","className","Yheystiedot","persons","onSubmit","event","window","alert","name","number","type","NewName","props","value","newname","onChange","onchange","NewNumber","newnumber","App","useState","setPersons","setNewPerson","newName","setNewName","newNumber","setNewNumber","showFilter","setShowFilter","addedMessage","setAddedMessage","useEffect","personService","initialPersons","personsToShow","filter","toLowerCase","includes","target","n","length","preventDefault","returnedPerson","concat","catch","error","map","id","ReactDOM","render","document","getElementById"],"mappings":"kMAEMA,EAAU,eAuBD,EArBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAmB9B,EAhBA,SAAAC,GAEX,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,S,OCI5BG,EAbI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEpB,OADFC,QAAQC,IAAI,gBACM,OAAZF,EACK,KAIP,qBAAKG,UAAU,QAAf,SACGH,KCNHI,EAAc,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAKpB,OACE,8BACE,uBAAMC,SANS,SAACC,GAClB,OAAOC,OAAOC,MAAM,UAAYJ,EAAQK,KAAO,+BAK7C,UACGL,EAAQK,KADX,IACkBL,EAAQM,OACxB,wBAAQC,KAAK,SAAb,0BAMFC,EAAU,SAACC,GAEf,OACE,yCACQ,uBAAOC,MAAOD,EAAME,QAC1BC,SAAUH,EAAMI,eAIhBC,EAAY,SAACL,GAEjB,OACE,2CACU,uBAAOC,MAAOD,EAAMM,UAC5BH,SAAUH,EAAMI,eA0GPG,EArGH,WAEV,MAA8BC,mBAAS,IAAvC,mBAAOjB,EAAP,KAAgBkB,EAAhB,KACA,EAAkCD,mBAAS,IAA3C,mBAAkBE,GAAlB,WACA,EAAgCF,mBAAS,IAAzC,mBAAQG,EAAR,KAAiBC,EAAjB,KACA,EAAoCJ,mBAAS,IAA7C,mBAAQK,EAAR,KAAmBC,EAAnB,KACA,EAAsCN,mBAAS,IAA/C,mBAAQO,EAAR,KAAoBC,EAApB,KACA,EAAwCR,mBAAS,IAAjD,mBAAOS,EAAP,KAAqBC,EAArB,KAEA,EAAgCV,mBAAS,IAAzC,mBACA,GADA,UACoCA,mBAAS,KAA7C,6BAEAW,qBAAU,WACRC,IAEGxC,MAAK,SAAAyC,GACJZ,EAAWY,QAEd,IAEH,IA4CMC,EAAgB/B,EAAQgC,QAAO,SAAAhC,GAAO,OAC0B,IAAnEA,EAAQK,KAAK4B,cAAeC,SAASV,EAAWS,kBAGnD,OACE,gCACE,cAAC,EAAD,CAActC,QAAS+B,IACvB,2CAEA,8BACE,uDAAyB,uBAAOhB,MAAOc,EACvCZ,SAxBkB,SAACV,GACvBuB,EAAcvB,EAAMiC,OAAOzB,UAsBvB,SAIA,2CACA,uBAAMT,SA3DI,SAACC,GAEIF,EAAQgC,QAAO,SAAAI,GAAC,OAAIA,EAAE/B,OAASe,KAEnCiB,OAAS,EACtBlC,OAAOC,MAAMgB,EAAU,oCAIvBlB,EAAMoC,iBAKNT,EAJqB,CACjBxB,KAAMe,EACNd,OAAQgB,IAITjC,MAAK,SAAAkD,GACNrB,EAAWlB,EAAQwC,OAAOD,IAC1BpB,EAAa,IACbE,EAAW,IACXE,EAAa,IACbI,EAAgB,SAAWY,EAAelC,SAE3CoC,OAAM,SAAAC,GAELf,EAAgBe,EAAMpD,SAASC,MAC/BK,QAAQC,IAAI6C,EAAMpD,SAASC,WAiC3B,UACE,8BACE,cAAC,EAAD,CAASoB,QAASS,EAASP,SA1Bb,SAACX,GACvBmB,EAAWnB,EAAMiC,OAAOzB,YA2BlB,8BACE,cAAC,EAAD,CAAWK,UAAWO,EAAWT,SAzBb,SAACX,GAC7BqB,EAAarB,EAAMiC,OAAOzB,YA0BpB,8BACE,wBAAQH,KAAK,SAAb,sBAGN,yCACCwB,EAAcY,KAAI,SAAA3C,GAAO,OACxB,cAAC,EAAD,CAA8BA,QAASA,GAArBA,EAAQ4C,W,MC9HlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3378d34a.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n// *******\r\nconst remove = (id, newObject) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n    \r\nexport default { getAll, create, update }","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  console.log('Notification')\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst Yheystiedot = ({persons}) => {\n  const deleteName = (event) => {\n    return(window.alert(\"Delete \" + persons.name + \" ? EI VIELÄ TOTEUTETTU!\"))\n  }\n\n  return (\n    <div>\n      <form onSubmit={deleteName}>\n        {persons.name} {persons.number}\n        <button type=\"submit\">delete</button>\n      </form>\n    </div>\n  )\n}\n\nconst NewName = (props) => {\n\n  return (\n    <div>\n      name: <input value={props.newname} \n      onChange={props.onchange} />\n    </div>\n  )\n}\nconst NewNumber = (props) => {\n\n  return (\n    <div>\n      number: <input value={props.newnumber} \n      onChange={props.onchange} />\n    </div>\n  )\n}\n\nconst App = () => {\n  // tyhjä taulukko\n  const [persons, setPersons] = useState([]) \n  const [newPerson, setNewPerson] = useState('')\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ showFilter, setShowFilter ] = useState('')\n  const [addedMessage, setAddedMessage] = useState('')\n  \n  const [ delName, setDelName ] = useState('')\n  const [ delNumber, setDelNumber ] = useState('')\n  \n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n  \n  const addName = (event) => {\n\n    const apupersons = persons.filter(n => n.name === newName)\n    // Nimi on jo\n    if (apupersons.length > 0) {\n      window.alert(newName + \" is allready added to phonebook\")\n    }\n    // Nimeä ei ole\n    else {\n      event.preventDefault()\n      const personObject = {\n          name: newName,\n          number: newNumber,\n      } // nameObject\n      personService\n      .create(personObject)\n        .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewPerson('')\n        setNewName('')\n        setNewNumber('')\n        setAddedMessage('Added ' + returnedPerson.name)\n      })\n      .catch(error => {\n        // pääset käsiksi palvelimen palauttamaan virheilmoitusolioon näin\n        setAddedMessage(error.response.data)\n        console.log(error.response.data)\n      })\n    } // else\n  } // addName\n \n  const handleNewFilter = (event) => {\n    setShowFilter(event.target.value)\n  } // setShowFilter\n\n  const handleNewChange = (event) => {\n    setNewName(event.target.value)\n  } // handleNewChange\n\n  const handleNewNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  } // handleNewChange\n\n  // muutetaan henkilön nimi että haku (input) pieniksi kirjaimiksi ( .toLowerCase() )\n  const personsToShow = persons.filter(persons => \n    (persons.name.toLowerCase()).includes(showFilter.toLowerCase()) === true)\n  \n\n  return (\n    <div>\n      <Notification message={addedMessage} />\n      <h2>Phonebook</h2>\n      \n      <div>\n        <p>filter shown with name<input value={showFilter} \n        onChange={handleNewFilter}/> </p>\n      </div>\n      \n        <h2>add a new</h2>\n        <form onSubmit={addName}>\n          <div>\n            <NewName newname={newName} onchange={handleNewChange} />\n          </div>\n          <div>\n            <NewNumber newnumber={newNumber} onchange={handleNewNumberChange} />\n          </div>\n          <div>\n            <button type=\"submit\">add</button>\n          </div>\n        </form>\n      <h2>Numbers</h2>\n      {personsToShow.map(persons =>\n        <Yheystiedot key={persons.id} persons={persons} />\n      )}\n\n \n    </div>\n  ) // return\n\n} // App\n\nexport default App;\n","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}